name: Deploy Master Server To GoogleCloud

on:
  push:
    branches:
      - main
    tags:        
      - '*'

env:
  DOCKERFILE_PATH: MasterServer
  GOOGLECLOUD_REGION: europe-west2
  GOOGLECLOUD_PROJECT: notpoker # your project
  GOOGLECLOUD_REPOSITORY: notpoker-masterserver # repository [of images] under your project in Artifact Registry
  GOOGLECLOUD_IMAGENAME: masterserver # image name inside AR repository (+tag)
  
# https://medium.com/@sbkapelner/building-and-pushing-to-artifact-registry-with-github-actions-7027b3e443c1
jobs:
  BuildAndDeploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v2
        with:
          submodules: recursive

      - name: Configure Node
        uses: actions/setup-node@v1
        with:
          registry-url: https://npm.pkg.github.com/
          node-version: 21

      - name: Install Github Packages
        working-directory: ${{ env.DOCKERFILE_PATH }}
        run: npm ci

      - name: Authorise GoogleCloud
        id: googlecloudauth
        uses: google-github-actions/auth@v1
        with:
          credentials_json: "${{ secrets.GOOGLECLOUD_SERVICE_ACCOUNT_KEY }}"

      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v1

      - name: Use gcloud CLI
        run: gcloud info

      - name: Authorise Docker to GoogleCloud
        run: |
          gcloud auth configure-docker ${{ env.GOOGLECLOUD_REGION }}-docker.pkg.dev --quiet

      # currently use main, or tag, but seperate step as this may be more complicated later
      - name: Generate Tag Name
        id: GetTagName
        run: |
          echo "TagName=${{ github.ref_name }}" >> "$GITHUB_OUTPUT"

      # generate the final tag for docker->artifact registry
      - name: Generate Artifact Registry Location
        id: GetImageTag
        run: |
          echo "ImageTag=${{ env.GOOGLECLOUD_REGION }}-docker.pkg.dev/${{ env.GOOGLECLOUD_PROJECT }}/${{ env.GOOGLECLOUD_REPOSITORY }}/${{ env.GOOGLECLOUD_IMAGENAME}}:${{ steps.GetTagName.outputs.TagName }}" >> "$GITHUB_OUTPUT"

      - name: Build image
        run: docker build ./${{ env.DOCKERFILE_PATH }} --tag ${{ steps.GetImageTag.outputs.ImageTag }}
        #working-directory: WORKING_DIRECTORY

      - name: Push image
        #if: ${{ startsWith(github.ref, 'refs/tags/v') }}
        run: docker push ${{ steps.GetImageTag.outputs.ImageTag }}
      
